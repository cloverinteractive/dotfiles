STARSHIP_PATH=`which starship`
POWERLINE_PATH=`which powerline-shell`

# Print what our current git branch is
function current_git_branch() {
  git_exists=`git branch 2>/dev/null | sed -ne'/^\* /s///p'`

  if [[ "$git_exists" != "" ]]; then
    if [[ "$git_exists" == "(no branch)" ]]; then
      git_exists="\e[31m\]$git_exists\e[0m\]"
    fi
    echo "$git_exists "
  fi
  unset git_exists
}

# Print how many items there are in our git stash
function current_git_stash() {
  git_stash=`git stash list 2>/dev/null | /usr/bin/wc -l | sed 's/ *//g'`

  if [[ "$git_stash" != "" && $git_stash > 0 ]]; then
    echo "[$git_stash] "
  fi
  unset git_stash
}

# Print smiley or frwony face based on the last command return status
function last_return_status() {
  if [[ $? == 0 ]]; then
    echo "\[\e[0;32m\]☺\[\e[0m\]"
  else
    echo "\[\e[1;31m\]☹\[\e[0m\]"
  fi
}

function _update_ps1() {
  PS1=$(powerline-shell $?)
}

# Favor starship or powerline or fallback to bash functions
if [[ -x $STARSHIP_PATH ]]; then
  eval "$(starship init bash)"
else
  if [[ $POWERLINE_PATH != '' && ! $PROMPT_COMMAND =~ _update_ps1 ]]; then
    PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
  else
    PROMPT_COMMAND='PS1="$(last_return_status) \[\e[1;31m\]\u\[\e[0m\] \t \[\e[32m\]$(current_git_branch)\[\e[0m\]\[\e[35m\]$(current_git_stash)\[\e[0m\]\[\e[33m\]\w\[\e[0m\] \[\e[1m\]\$\[\e[0m\] "'
  fi
fi

# vim: set ft=sh:
