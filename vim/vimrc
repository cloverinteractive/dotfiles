if filereadable(expand("~/.vimrc.before"))
  source ~/.vimrc.before
endif

if filereadable(expand("~/.vundlerc"))
  source ~/.vundlerc
endif

set hidden
set number
syntax on

if has("autocmd")
  filetype plugin indent on
endif

:colorscheme koehler

if has('mouse')
  set mouse=a
endif

" Lets use smartcase
set ignorecase
set smartcase

" No wrapping please
set nowrap

set nocompatible

" Don't resize split views automatically
set noequalalways

" Always show status line
set laststatus=2

" Change working directory to current
cmap cwd lcd %:p:h
cmap cd. lcd %:p:h
	
" Save a file when you forgot to sudo
cmap w!! %!sudo tee > /dev/null %

" Add commandline completion
set wildmenu

" Make cmdline tab completion similar to bash
set wildmode=list:longest 

set complete=.,b,u,t
"
"stuff to ignore when tab completing
set wildignore=*.o,*.obj,*~ 

runtime macros/matchit.vim

" Handle trailing whitespace, shamelessly taken from http://vimcasts.org/episodes/tidying-whitespace/
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

autocmd BufWritePre *.rb,*.coffee,*.yml,*.haml,*.erb,*.php,*.java,*.py,*.js :call <SID>StripTrailingWhitespaces() " Run this method on save

if filereadable(expand("~/.vimrc.after"))
  source ~/.vimrc.after
endif

" vim: filetype=vim
